#!markdown

# [Functional Programming Design Patterns](https://fsharpforfunandprofit.com/fppatterns/)

## Hollywood principle: Don't call us, we'll call you

#!csharp

int Divide(int top, int bottom)
{
    if (bottom == 0)
        throw new InvalidOperationException("Divide by 0");
    else
        return top / bottom;
}

#!csharp

void Divide(int top, int bottom,
    Action ifZero, Action<int> ifSuccess)
{
    if (bottom == 0)
        ifZero();
    else
        ifSuccess(top / bottom);
}

#!fsharp

let divide ifZero ifSuccess top bottom =
    if (bottom = 0)
    then ifZero()
    else ifSuccess (top / bottom)

#!fsharp

let ifZero1 () = printfn "Bad"
let ifSuccess1 x = printfn "Good %i" x

let safeDivide = divide ifZero1 ifSuccess1
safeDivide 6 4
safeDivide 6 0

#!csharp

Action<int, int> Divide1(Action ifZero, Action<int> ifSuccess) =>
    (int top, int bottom) =>
    {
        if (bottom == 0)
            ifZero();
        else
            ifSuccess(top / bottom);
    };

var ifZero1 = () => Console.WriteLine("Bad");
var ifSuccess1 = (int result) => Console.WriteLine($"Good {result}");
var safeDivide = Divide1(ifZero1, ifSuccess1);

safeDivide(6, 4);
safeDivide(6, 0);
